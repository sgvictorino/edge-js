name: Build

on:
  push:
    branches: [ master, actions-wip ]  

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [lts/*, 12, 14, 16]
      max-parallel: 1

    defaults:
      run:
        shell: powershell
    
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install project dependencies
      run: npm ci
    - name: Install node-gyp
      run: npm install --global node-gyp
    - run: echo "NODE_VERSION_STRING=$(node --version)" | Out-File -FilePath $Env:GITHUB_ENV -Append
    - name: Remove older Node ${{ matrix.node-version }} builds
      run: Get-ChildItem lib\native\*\*\$($(node --version).TrimStart("v").Split("\.")[0])* | Remove-Item -Verbose -recurse
    - name: Build for release
      run: tools/build.bat release $($(node --version).TrimStart("v"))
    - name: Upload working directory as artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        name: edge-js-node-${{ env.NODE_VERSION_STRING }}
        path: .
        if-no-files-found: error
    - name: Configure committer, stage changes
      run: cmd /c 'git config user.name "Github Actions Bot" && git config user.email "41898282+github-actions[bot]@users.noreply.github.com" && git add .'
    - name: Commit
      run: git commit -m "update to $(node --version)"
    - name: Ensure changes were only made to lib/
      run: |
          if (-not ([string]::IsNullOrEmpty((git diff --name-only HEAD HEAD~1 | Select-String "(^lib\/)|(\.AssemblyReference\.cache$)" -NotMatch)))) {
            git diff --stat HEAD HEAD~1
            throw "Changes were made outside lib/, aborting!"
          }
    - name: Push
      run: git push
